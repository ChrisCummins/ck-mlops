{
  "backup_data_uid": "7c66e43968497e17",
  "data_name": "speech-recognition-pytorch",
  "no_compile": "yes",
  "no_target_file": "yes",
  "pass_env_to_resolve": "yes",
  "process_in_tmp": "yes",
  "program": "yes",
  "run_cmds": {
    "accuracy": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ $<<CK_ENV_MLPERF_INFERENCE>>$/speech_recognition/rnnt/pytorch/inference.py --dataset_dir  $<<CK_RNNT_DATASET_DIR>>$ --val_manifest $<<CK_RNNT_MANIFEST>>$ --model_toml $<<CK_RNNT_TOML>>$ --ckpt $<<CK_RNNT_CHECKPOINT>>$  --batch_size $<<CK_RNNT_BATCH_SIZE>>$ --seed $<<CK_RNNT_SEED>>$ --max_duration $<<CK_RNNT_MAX_DURATION>>$ --min_duration $<<CK_RNNT_MIN_DURATION>>$"
      }
    },
    "instr": {
      "ignore_return_code": "no",
      "run_time": {
        "fine_grain_timer_file": "tmp-ck-timer.json",
        "post_process_via_ck": {
          "data_uoa": "speech-recognition",
          "module_uoa": "script",
          "script_name": "postprocess"
        },
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ $<<CK_ENV_MLPERF_INFERENCE>>$/speech_recognition/rnnt/pytorch/inference.py --dataset_dir  $<<CK_RNNT_DATASET_DIR>>$ --val_manifest $<<CK_RNNT_MANIFEST>>$ --model_toml $<<CK_RNNT_TOML>>$ --ckpt $<<CK_RNNT_CHECKPOINT>>$  --batch_size $<<CK_RNNT_BATCH_SIZE>>$ --seed $<<CK_RNNT_SEED>>$ --max_duration $<<CK_RNNT_MAX_DURATION>>$ --min_duration $<<CK_RNNT_MIN_DURATION>>$ --instr"
      }
    },
    "performance": {
      "ignore_return_code": "no",
      "run_time": {
        "run_cmd_main": "$<<CK_ENV_COMPILER_PYTHON_FILE>>$ $<<CK_ENV_MLPERF_INFERENCE>>$/speech_recognition/rnnt/pytorch/inference.py --dataset_dir  $<<CK_RNNT_DATASET_DIR>>$ --val_manifest $<<CK_RNNT_MANIFEST>>$ --model_toml $<<CK_RNNT_TOML>>$ --ckpt $<<CK_RNNT_CHECKPOINT>>$  --batch_size $<<CK_RNNT_BATCH_SIZE>>$ --seed $<<CK_RNNT_SEED>>$ --max_duration $<<CK_RNNT_MAX_DURATION>>$ --min_duration $<<CK_RNNT_MIN_DURATION>>$"
      }
    }
  },
  "run_deps": {
    "dataset-calibration": {
      "enable_if_env": [
        {
          "CK_RNNT_DATASET": [
            "calibration"
          ]
        }
      ],
      "local": "yes",
      "name": "LibriSpeech calibration dataset (preprocessed)",
      "sort": 20,
      "tags": "dataset,librispeech,preprocessed,wav,calibration"
    },
    "dataset-dev-clean": {
      "enable_if_env": [
        {
          "CK_RNNT_DATASET": [
            "dev-clean"
          ]
        }
      ],
      "local": "yes",
      "name": "LibriSpeech Dev-Clean dataset (preprocessed)",
      "sort": 20,
      "tags": "dataset,librispeech,preprocessed,wav,dev-clean"
    },
    "mlperf-inference": {
      "local": "yes",
      "name": "MLPerf Inference source (with RNN-T tweaks)",
      "sort": 50,
      "tags": "mlperf,inference,source,dividiti.rnnt"
    },
    "model": {
      "local": "yes",
      "name": "PyTorch RNN-T model",
      "sort": 80,
      "tags": "model,pytorch,rnnt"
    },
    "plugins-dec-glow": {
      "enable_if_env": [
        {
          "CK_RNNT_DEC_BACKEND": [
            "glow"
          ]
        }
      ],
      "local": "yes",
      "name": "GLOW LSTM RNNT Dec plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-dec,glow",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_DEC": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_DEC": "orig"
          }
        ]
      }
    },
    "plugins-dec-onnx": {
      "enable_if_env": [
        {
          "CK_RNNT_DEC_BACKEND": [
            "onnx"
          ]
        }
      ],
      "local": "yes",
      "name": "ONNX LSTM RNNT Dec plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-dec,onnx",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_DEC": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_DEC": "orig"
          }
        ]
      }
    },
    "plugins-dec-pytorch": {
      "enable_if_env": [
        {
          "CK_RNNT_DEC_BACKEND": [
            "pytorch"
          ]
        }
      ],
      "local": "yes",
      "name": "Pytorch LSTM RNNT Dec plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-dec,pytorch",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_DEC": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_DEC": "orig"
          }
        ],
        "orig-quant": [
          {
            "CK_RNNT_DEC": "orig-quant"
          }
        ]
      }
    },
    "plugins-post-glow": {
      "enable_if_env": [
        {
          "CK_RNNT_POST_BACKEND": [
            "glow"
          ]
        }
      ],
      "local": "yes",
      "name": "GLOW LSTM RNNT Post plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-post,glow",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_POST": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_POST": "orig"
          }
        ]
      }
    },
    "plugins-post-onnx": {
      "enable_if_env": [
        {
          "CK_RNNT_POST_BACKEND": [
            "onnx"
          ]
        }
      ],
      "local": "yes",
      "name": "ONNX LSTM RNNT Post plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-post,onnx",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_POST": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_POST": "orig"
          }
        ]
      }
    },
    "plugins-post-pytorch": {
      "enable_if_env": [
        {
          "CK_RNNT_POST_BACKEND": [
            "pytorch"
          ]
        }
      ],
      "local": "yes",
      "name": "Pytorch LSTM RNNT Post plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-post,pytorch",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_POST": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_POST": "orig"
          }
        ],
        "orig-quant": [
          {
            "CK_RNNT_POST": "orig-quant"
          }
        ]
      }
    },
    "plugins-pre-glow": {
      "enable_if_env": [
        {
          "CK_RNNT_PRE_BACKEND": [
            "glow"
          ]
        }
      ],
      "local": "yes",
      "name": "GLOW LSTM RNNT Pre plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-pre,glow",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_PRE": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_PRE": "orig"
          }
        ]
      }
    },
    "plugins-pre-onnx": {
      "enable_if_env": [
        {
          "CK_RNNT_PRE_BACKEND": [
            "onnx"
          ]
        }
      ],
      "local": "yes",
      "name": "ONNX LSTM RNNT Pre plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-pre,onnx",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_PRE": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_PRE": "orig"
          }
        ]
      }
    },
    "plugins-pre-pytorch": {
      "enable_if_env": [
        {
          "CK_RNNT_PRE_BACKEND": [
            "pytorch"
          ]
        }
      ],
      "local": "yes",
      "name": "Pytorch LSTM RNNT Pre plugin",
      "sort": 120,
      "tags": "nntest,plugin,rnnt-pre,pytorch",
      "update_tags_if_env": {
        "naive": [
          {
            "CK_RNNT_PRE": "naive"
          }
        ],
        "orig": [
          {
            "CK_RNNT_PRE": "orig"
          }
        ],
        "orig-quant": [
          {
            "CK_RNNT_PRE": "orig-quant"
          }
        ]
      }
    },
    "python": {
      "local": "yes",
      "name": "Python interpreter",
      "sort": 5,
      "tags": "compiler,python"
    },
    "pytorch": {
      "local": "yes",
      "name": "PyTorch framework",
      "sort": 15,
      "tags": "lib,pytorch"
    }
  },
  "run_vars": {
    "CK_RNNT_BATCH_SIZE": "1",
    "CK_RNNT_CHECKPOINT": "$<<CK_ENV_MODEL_PYTORCH>>$/rnnt.pt",
    "CK_RNNT_DATASET": "dev-clean",
    "CK_RNNT_DATASET_DIR": "$<<CK_ENV_DATASET_AUDIO_PREPROCESSED_DIR>>$/../",
    "CK_RNNT_DEC": "orig",
    "CK_RNNT_DEC_BACKEND": "pytorch",
    "CK_RNNT_MANIFEST": "$<<CK_ENV_DATASET_AUDIO_PREPROCESSED_DIR>>$/wav-list.json",
    "CK_RNNT_MAX_DURATION": 15,
    "CK_RNNT_MIN_DURATION": 0.1,
    "CK_RNNT_POST": "orig",
    "CK_RNNT_POST_BACKEND": "pytorch",
    "CK_RNNT_PRE": "orig",
    "CK_RNNT_PRE_BACKEND": "pytorch",
    "CK_RNNT_SEED": "87",
    "CK_RNNT_TOML": "$<<CK_ENV_MLPERF_INFERENCE>>$/speech_recognition/rnnt/pytorch/configs/rnnt.toml"
  },
  "tags": [
    "speech-recognition",
    "pytorch",
    "rnnt",
    "rnn-t",
    "mlperf",
    "experimental",
    "exp"
  ]
}
